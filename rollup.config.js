import * as fs from "fs";
import svelte from "rollup-plugin-svelte";
import resolve from "rollup-plugin-node-resolve";
import commonjs from "rollup-plugin-commonjs";
import babel from "rollup-plugin-babel";
import uglify from "rollup-plugin-uglify";
import replace from "rollup-plugin-replace";
import CleanCSS from "clean-css";

const production = !!process.env.production;

export default {
  entry: "src/main.js",
  dest: "public/bundle.js",
  format: "iife",
  moduleName: "app",
  sourceMap: true,
  plugins: [
    svelte({
      // we'll extract any component CSS out into
      // a separate file — better for performance
      css(css) {
        if (css === null) css = "";
        if (production) css = new CleanCSS().minify(css).styles;
        fs.writeFileSync("public/app.css", `/* This file is automatically generated — don't edit it! */\n${css}`);
      }
    }),

    // If you have external dependencies installed from
    // npm, you'll most likely need these plugins. In
    // some cases you'll need additional configuration —
    // consult the documentation for details:
    // https://github.com/rollup/rollup-plugin-commonjs
    resolve(),
    babel({
      exclude: "node_modules/**" // only transpile our source code
    }),
    commonjs({
      include: ["node_modules/**"]
    }),
    replace({
      "process.env.NODE_ENV": JSON.stringify("development")
    }),

    // If we're building for production (npm run build
    // instead of npm run dev), transpile and minify
    production && buble({ exclude: "node_modules/**" }),
    production && uglify()
  ]
};
